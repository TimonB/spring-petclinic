---

name: 8. Patch container image with copa

on:
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v3


      - name: Login to GitHub Container registry
        uses: docker/login-action@v2
        with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull image
        run: |
          docker pull ghcr.io/timonb/lunch-learn-demo:latest

      - name: Generate Trivy Report
        uses: aquasecurity/trivy-action@d43c1f16c00cfd3978dde6c07f4bbcf9eb6993ca # 0.16.1
        with:
          scan-type: "image"
          format: "json"
          output: "report.json"
          ignore-unfixed: true
          vuln-type: "os"
          image-ref: ghcr.io/timonb/lunch-learn-demo:latest

        # check whether there are any OS package vulnerabilities
      - name: Check vulnerability count
        id: vuln_count
        run: |
          report_file="report.json"
          vuln_count=$(jq 'if .Results then [.Results[] | select(.Class=="os-pkgs" and .Vulnerabilities!=null) | .Vulnerabilities[]] | length else 0 end' "$report_file")
          echo "vuln_count=$vuln_count" >> $GITHUB_OUTPUT

        # copa action will only run if there are vulnerabilities
      - name: Run Copa action
        if: steps.vuln_count.outputs.vuln_count != '0'
        id: copa
        # using main for testing purposes
        # use a tag (such as v1 or v1.0.1) at a bare minimum
        # recommendation is to pin to a digest for security and stability
        # and rely on dependabot for digest/version updates
        uses: project-copacetic/copa-action@main
        with:
          image: ghcr.io/timonb/lunch-learn-demo:latest
          image-report: "report.json"
          patched-tag: "patched"
          timeout: "5m" # optional, default is 5m
          output: vex.json # optional
          format: "openvex" # optional, default is openvex